{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["Front","styled","div","Back","CardContainer","Card","index","imgName","onClick","miss","flipBack","useEffect","container","document","getElementsByClassName","style","transform","removeProperty","className","onClickCapture","e","transformProperty","currentTarget","setProperty","flip","visibility","backgroundImage","MainContainer","App","useState","cats","current","setCurrent","downArray","setDownArray","selectedCard","setSelectedCard","map","n","i","includes","cardName","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6PA2BA,I,EAAMA,EAAQC,IAAOC,IAAV,8NAYLC,EAAOF,IAAOC,IAAV,+RAcJE,EAAgBH,IAAOC,IAAV,oJAQJG,EA1Df,YAA8F,IAAD,IAA9EC,aAA8E,MAAtE,SAAsE,MAA5DC,eAA4D,MAAlD,OAAkD,EAA1CC,EAA0C,EAA1CA,QAA0C,IAAjCC,YAAiC,aAAnBC,gBAAmB,SAkB3F,OAPAC,qBAAU,WACR,IAAMC,EAAYC,SAASC,uBAAuBR,GAAO,GACrDI,GAAYE,EAAUG,MAAMC,WAC9BJ,EAAUG,MAAME,eAAe,eAEhC,CAACP,IAEG,eAACN,EAAD,CAAec,UAAWZ,EAAOa,eAAgB,SAACC,GAAD,OAjB3C,SAACA,GACZ,IAAMC,EAAoBD,EAAEE,cAAcP,MAAMC,UAC5CK,GAA2C,oBAAtBA,IAGvBD,EAAEE,cAAcP,MAAMQ,YAAY,YAAa,mBAC/Cf,KAW2DgB,CAAKJ,IAAIL,MAAON,EAAO,CAACgB,WAAY,UAAY,GAAxG,UACL,cAACzB,EAAD,IACA,cAACG,EAAD,CAAMY,MAAO,CAACW,gBAAgB,SAAD,OAAWnB,EAAX,gBCyBjC,IAAMoB,EAAgB1B,IAAOC,IAAV,uIAQJ0B,EAnDf,WAEE,MAAwBC,mBAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAA1H,mBAAOC,EAAP,KACA,GADA,KAC6BD,mBAAS,KAAtC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAiCH,mBAAS,IAA1C,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAuCL,mBAAS,IAAhD,mBAAOM,EAAP,KAAoBC,EAApB,KA2BA,OAzBAzB,qBAAU,cAEP,IAwBD,qBAAKO,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACS,EAAD,UACGG,EAAKO,KAAI,SAACC,EAAEC,GAAH,OAAS,cAAC,EAAD,CAAMjC,MAAK,UAAKgC,EAAL,YAAUC,GAAKhC,QAAS+B,EAAG5B,SAAUyB,EAAaK,SAASF,GAAI7B,KAAMwB,EAAUO,SAASF,GAAI9B,QAAS,kBAzBxHiC,EAyBwIH,OAxBtJP,EACEA,IAAYU,EACbC,YAAW,WAETR,EAAa,GAAD,mBAAKD,GAAL,CAAeQ,KAC3BT,EAAW,MACX,KAEFU,YAAW,WAETN,EAAgB,CAACL,EAAQU,IACzBT,EAAW,MACX,MAGJA,EAAWS,GACXL,EAAgB,MAjBF,IAACK,eCJNE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,SAM1BZ,M","file":"static/js/main.9cb19cbe.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport styled from \"styled-components\";\n\nfunction Card({index = 'cat1-1', imgName = 'cat1', onClick, miss = false, flipBack = false}) {\n  const flip = (e) => {\n    const transformProperty = e.currentTarget.style.transform\n    if (transformProperty && transformProperty === 'rotateY(180deg)') {\n      // e.currentTarget.style.removeProperty('transform')\n    } else {\n      e.currentTarget.style.setProperty('transform', \"rotateY(180deg)\")\n      onClick()\n    }\n  }\n\n  useEffect(() => {\n    const container = document.getElementsByClassName(index)[0];\n    if (flipBack && container.style.transform) {\n      container.style.removeProperty('transform')\n    }\n  }, [flipBack])\n\n  return <CardContainer className={index} onClickCapture={(e) => flip(e)} style={miss ? {visibility: 'hidden'} : {}}>\n    <Front/>\n    <Back style={{backgroundImage: `url(./${imgName}.jpg)`}}/>\n  </CardContainer>\n}\n\nconst Front = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 8px;\n  background-image: url(\"./bg.jpg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n`\n\nconst Back = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 8px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n`\n\nconst CardContainer = styled.div`\n  position: relative;\n  width: 50px;\n  height: 75px;\n  transition: transform 0.2s;\n  transform-style: preserve-3d;\n`\n\nexport default Card;\n","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport Card from './Card'\nimport styled from 'styled-components'\n\nfunction App() {\n\n  const [cats, setCats] = useState(['cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6'])\n  const [current,setCurrent] = useState('')\n  const [downArray,setDownArray] = useState([])\n  const [selectedCard,setSelectedCard] = useState([])\n\n  useEffect(() => {\n    const cats = []\n  }, [])\n\n  const handleClick=(cardName)=>{\n    if(current){\n      if(current === cardName){\n        setTimeout(()=>{\n          // 两张卡片不可见\n          setDownArray([...downArray,cardName])\n          setCurrent('')\n        },250)\n      }else{\n        setTimeout(()=>{\n          // 所有翻开的卡片回到背面\n          setSelectedCard([current,cardName])\n          setCurrent('')\n        },250)\n      }\n    }else{\n      setCurrent(cardName)\n      setSelectedCard([])\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MainContainer>\n          {cats.map((n,i) => <Card index={`${n}-${i}`} imgName={n} flipBack={selectedCard.includes(n)} miss={downArray.includes(n)} onClick={()=>handleClick(n)}/>)}\n        </MainContainer>\n      </header>\n    </div>\n  );\n}\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  width: 240px;\n  height: 400px;\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}